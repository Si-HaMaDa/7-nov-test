{
    "openapi": "3.0.0",
    "info": {
        "title": "ZaBbat API Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/zabbat/public/api/app",
            "description": "Demo API Server"
        },
        {
            "url": "http://localhost/zabbat/public/"
        }
    ],
    "paths": {
        "/password/resetlink": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Request a password reset link to change on web.",
                "description": "Send email to user to reset the password from the web, if you use this the user will reset from web and you will just ask for login after the link is sent.",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\PasswordResetController::sendResetLinkEmail",
                "requestBody": {
                    "description": "Email for the user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Request a password reset.",
                "description": "Get the token for password reset by mail.",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\PasswordResetController::create",
                "requestBody": {
                    "description": "Email for the user",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/password/find/{token}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Check validity of reset token.",
                "description": "Check if the token is not expired",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\PasswordResetController::find",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token of User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Reset the password of the Users.",
                "description": "Reset the password of the Users.",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\PasswordResetController::reset",
                "requestBody": {
                    "description": "The Email and Password of the user and the new password with the token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get a listing of the Blogs.",
                "description": "Get all Blogs",
                "operationId": "getBlogsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "example": "A nice project"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs/categories": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get a listing of the Blog Categories.",
                "description": "Get all Blog Categories",
                "operationId": "getBlog'sCategoriesList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs/category/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get a listing of the Blogs of Category.",
                "description": "Get all Blogs of Category",
                "operationId": "getBlogsListOfCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Display the specified Blog",
                "description": "Get Blog",
                "operationId": "getBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Blog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a listing of the Categories.",
                "description": "Get all Categories",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display the specified Category",
                "description": "Get Category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get a listing of the Companies.",
                "description": "Get all Companies",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Store a newly created Company in storage",
                "description": "Store Company",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyAdd"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/companies/categories": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get a listing of the Company Categories.",
                "description": "Get all Company Categories",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Display the specified Company",
                "description": "Get Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Update the specified Company in storage",
                "description": "Update Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyAdd"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Remove the specified Company from storage",
                "description": "Delete Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/companies/{id}/assign_user": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Assign the specified User to Company",
                "description": "Assign User to Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Company that should be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyAssignUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/companies/{id}/delete_user": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete the specified User to Company",
                "description": "Delete User to Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Company that should be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyDeleteUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/companies/{id}/clients": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get Clients of Company",
                "description": "Clients of Company",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/consults": {
            "get": {
                "tags": [
                    "Consult"
                ],
                "summary": "Get a listing of the Consults.",
                "description": "Get all Consults",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Consult"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Consult"
                ],
                "summary": "Store a newly created Consult in storage",
                "description": "Store Consult",
                "requestBody": {
                    "description": "Consult that should be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "related": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/categories": {
            "get": {
                "tags": [
                    "Consult"
                ],
                "summary": "Get a listing of the Consult Categories.",
                "description": "Get all Consult Categories",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Consult"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/media": {
            "post": {
                "tags": [
                    "Consult"
                ],
                "summary": "Store a media for Consult in storage",
                "description": "Store Consult's media",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "consult_id": {
                                        "description": "Id of Consult",
                                        "type": "integer"
                                    },
                                    "file": {
                                        "description": "File for Consult",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/{id}": {
            "get": {
                "tags": [
                    "Consult"
                ],
                "summary": "Display the specified Consult",
                "description": "Get Consult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Consult"
                ],
                "summary": "Update the specified Consult in storage",
                "description": "Update Consult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Consult that should be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "related": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Consult"
                ],
                "summary": "Remove the specified Consult from storage",
                "description": "Delete Consult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/{id}/publish": {
            "put": {
                "tags": [
                    "Consult"
                ],
                "summary": "Publish the specified Consult in storage",
                "description": "Publish Consult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "publish": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/replays/{id}": {
            "get": {
                "tags": [
                    "Consult"
                ],
                "summary": "Display the specified Consult Replays",
                "description": "Get Consult Replays",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consults/{id}/replay": {
            "post": {
                "tags": [
                    "Consult"
                ],
                "summary": "Make a replay",
                "description": "Replay on Consult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Consult",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Some replay to consult"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consult"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{company}/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get a listing of the Projects.",
                "description": "Get all Projects",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Store a newly created Project in storage",
                "description": "Store Project",
                "operationId": "addProjectToCompany",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Project that should be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAdd"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{company}/projects/{id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Display the specified Project",
                "description": "Get Project",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update the specified Project in storage",
                "description": "Update Project",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Project that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAdd"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Remove the specified Project from storage",
                "description": "Delete Project",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/replays": {
            "get": {
                "tags": [
                    "Replay"
                ],
                "summary": "Get a listing of the Replays.",
                "description": "Get all Replays",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Replay"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Replay"
                ],
                "summary": "Store a newly created Replay in storage",
                "description": "Store Replay",
                "requestBody": {
                    "description": "Replay that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "relate_id": {
                                        "type": "integer"
                                    },
                                    "related": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Replay"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/replays/{id}/media": {
            "post": {
                "tags": [
                    "Replay"
                ],
                "summary": "Store a media for Replay in storage",
                "description": "Store Replay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Replay that should be stored",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File for Consult",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Replay"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/replays/{id}/publish": {
            "put": {
                "tags": [
                    "Replay"
                ],
                "summary": "Publish the specified Replay in storage",
                "description": "Publish Replay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Replay",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "publish": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Replay"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/replays/{id}": {
            "get": {
                "tags": [
                    "Replay"
                ],
                "summary": "Display the specified Replay",
                "description": "Get Replay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Replay",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Replay"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Replay"
                ],
                "summary": "Update the specified Replay in storage",
                "description": "Update Replay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Replay",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Replay that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Replay"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Replay"
                ],
                "summary": "Remove the specified Replay from storage",
                "description": "Delete Replay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Replay",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews": {
            "post": {
                "tags": [
                    "Review"
                ],
                "summary": "Store a newly created Review in storage",
                "description": "Store Review",
                "requestBody": {
                    "description": "Review that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Review"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "summary": "Display the specified Review",
                "description": "Get Review",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a listing of the Tags.",
                "description": "Get all Tags",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Display the specified Tag",
                "description": "Get Tag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tag",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{company}/project/{project}/tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get a listing of the Tasks.",
                "description": "Get all Tasks",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Store a newly created Task in storage",
                "description": "Store Task",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskAdd"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{company}/project/{project}/tasks/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Display the specified Task",
                "description": "Get Task",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Update the specified Task in storage",
                "description": "Update Task",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Remove the specified Task from storage",
                "description": "Delete Task",
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "id of Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "description": "id of Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified User in storage",
                "description": "Update User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Do a login of the Users.",
                "description": "Login the User",
                "requestBody": {
                    "description": "The Username or Email and Password of the user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Do a Register of the Users.",
                "description": "Register the User",
                "requestBody": {
                    "description": "the data to create new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Attachment": {
                "title": "Attachment",
                "description": "Attachment model",
                "properties": {
                    "user_id": {
                        "title": "User Id",
                        "description": "User Id",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "relate_id": {
                        "description": "relate_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "related": {
                        "description": "related",
                        "type": "string"
                    },
                    "filename": {
                        "description": "filename",
                        "type": "string"
                    },
                    "disk": {
                        "description": "disk",
                        "type": "string"
                    },
                    "path": {
                        "description": "path",
                        "type": "string"
                    },
                    "extension": {
                        "description": "extension",
                        "type": "string"
                    },
                    "mime": {
                        "description": "mime",
                        "type": "string"
                    },
                    "size": {
                        "description": "size",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "title": "user",
                        "description": "Project user's user model"
                    }
                },
                "type": "object"
            },
            "BlogOA": {
                "title": "Blog",
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "category_id": {
                        "description": "category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "description": "title",
                        "type": "string"
                    },
                    "content": {
                        "description": "content",
                        "type": "string"
                    },
                    "excerpt": {
                        "description": "excerpt",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "media_id": {
                        "description": "media_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "update_user": {
                        "description": "update_user",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "required": [
                    "name",
                    "model"
                ],
                "properties": {
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "content": {
                        "description": "content",
                        "type": "string"
                    },
                    "model": {
                        "description": "model",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Company": {
                "title": "Company",
                "required": [
                    "category_id",
                    "user_id",
                    "name",
                    "statu"
                ],
                "properties": {
                    "category_id": {
                        "description": "category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "team_id": {
                        "description": "team_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "logo": {
                        "description": "logo",
                        "type": "string"
                    },
                    "address": {
                        "description": "address",
                        "type": "string"
                    },
                    "tax_number": {
                        "description": "tax_number",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CompanyAdd": {
                "title": "Company_add",
                "required": [
                    "category_id",
                    "name",
                    "type"
                ],
                "properties": {
                    "logo": {
                        "title": "Logo",
                        "description": "Company logo",
                        "type": "file"
                    },
                    "category_id": {
                        "description": "category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "address": {
                        "description": "address",
                        "type": "string"
                    },
                    "tax_number": {
                        "description": "tax_number",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompanyAssignUser": {
                "title": "Company_assign_user",
                "required": [
                    "user",
                    "role"
                ],
                "properties": {
                    "user": {
                        "description": "user",
                        "type": "string"
                    },
                    "role": {
                        "description": "role",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompanyDeleteUser": {
                "title": "Company_delete_user",
                "required": [
                    "user"
                ],
                "properties": {
                    "user": {
                        "description": "user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Consult": {
                "title": "Consult",
                "required": [
                    "category_id",
                    "user_id",
                    "subject",
                    "description",
                    "statu"
                ],
                "properties": {
                    "category_id": {
                        "description": "category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "subject": {
                        "description": "subject",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "related": {
                        "description": "related",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "review": {
                        "description": "review",
                        "type": "boolean"
                    },
                    "coast": {
                        "description": "coast",
                        "type": "boolean"
                    },
                    "payment": {
                        "description": "payment",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Project": {
                "title": "Project",
                "description": "Project model",
                "required": [
                    "company_id",
                    "user_id",
                    "name",
                    "statu"
                ],
                "properties": {
                    "": {
                        "title": "ID",
                        "description": "ID",
                        "format": "int64",
                        "example": 1
                    },
                    "company_id": {
                        "title": "company_id",
                        "description": "Company Id which the project is belongs to.",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "client_id": {
                        "description": "client_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "team_id": {
                        "description": "team_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project"
                }
            },
            "ProjectAdd": {
                "title": "Project_add",
                "required": [
                    "company_id",
                    "name"
                ],
                "properties": {
                    "client_id": {
                        "description": "client_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Replay": {
                "title": "Replay",
                "required": [
                    "user_id",
                    "model_id",
                    "model_type",
                    "description",
                    "statu"
                ],
                "properties": {
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "model_id": {
                        "description": "model_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "model_type": {
                        "description": "model_type",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "required": [
                    "user_id",
                    "model_id",
                    "model_type",
                    "description",
                    "charges",
                    "amount"
                ],
                "properties": {
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "model_id": {
                        "description": "model_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "model_type": {
                        "description": "model_type",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "requirements": {
                        "description": "requirements",
                        "type": "string"
                    },
                    "notes": {
                        "description": "notes",
                        "type": "string"
                    },
                    "charges": {
                        "description": "charges",
                        "type": "string"
                    },
                    "amount": {
                        "description": "amount",
                        "type": "integer",
                        "format": "int32"
                    },
                    "estimate": {
                        "description": "estimate",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "required": [
                    "name",
                    "model"
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "content": {
                        "description": "content",
                        "type": "string"
                    },
                    "model": {
                        "description": "model",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task",
                "required": [
                    "project_id",
                    "user_id",
                    "assign_to",
                    "name",
                    "statu",
                    "proccess"
                ],
                "properties": {
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "project_id": {
                        "description": "project_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_id": {
                        "description": "user_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "assign_to": {
                        "description": "assign_to",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "proccess": {
                        "description": "proccess",
                        "type": "integer",
                        "format": "int32"
                    },
                    "show_client": {
                        "description": "show_client",
                        "type": "boolean"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TaskAdd": {
                "title": "TaskAdd",
                "required": [
                    "assign_to",
                    "name",
                    "statu"
                ],
                "properties": {
                    "assign_to": {
                        "description": "assign_to",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "show_client": {
                        "description": "show_client",
                        "type": "boolean"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "TaskUpdate": {
                "title": "TaskUpdate",
                "required": [
                    "assign_to",
                    "name",
                    "statu"
                ],
                "properties": {
                    "assign_to": {
                        "description": "assign_to",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "statu": {
                        "description": "statu",
                        "type": "string"
                    },
                    "proccess": {
                        "description": "proccess",
                        "type": "integer",
                        "format": "int32"
                    },
                    "show_client": {
                        "description": "show_client",
                        "type": "boolean"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "title": "Name",
                        "description": "name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "email",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "title": "Email verified at",
                        "description": "Email verified at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "password": {
                        "description": "password",
                        "type": "string"
                    },
                    "remember_token": {
                        "description": "remember_token",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "description": "A short description for security scheme",
                "name": "Authorization",
                "in": "header"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "http",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/zabbat/public/oauth/authorize",
                        "tokenUrl": "http://localhost/zabbat/public/oauth/token",
                        "refreshUrl": "http://localhost/zabbat/public/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "security": [
        {
            "passport": []
        },
        {
            "api_key": []
        }
    ],
    "tags": [
        {
            "name": "Project",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "Task",
            "description": "API Endpoints of Tasks"
        }
    ]
}